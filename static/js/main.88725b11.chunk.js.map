{"version":3,"sources":["features/experience/ExperiencePage.module.css","features/homepage/HomePage.jsx","features/experience/ExperiencePage.jsx","App.js","serviceWorker.js","index.js","features/homepage/HomePage.module.css"],"names":["module","exports","HomePage","className","styles","title","wrapper","shadow","description","React","Component","ExperiencePage","headline","info","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2LACAA,EAAOC,QAAU,CAAC,SAAW,iCAAiC,QAAU,gCAAgC,OAAS,+BAA+B,MAAQ,8BAA8B,YAAc,oCAAoC,KAAO,+B,mJCiBhOC,E,uKAZX,OACE,6BACE,wBAAIC,UAAWC,IAAOC,OAAtB,oBACA,yBAAKF,UAAWC,IAAOE,SACrB,wBAAIH,UAAWC,IAAOG,QAAtB,cAEF,wBAAIJ,UAAWC,IAAOI,aAAtB,mF,GAReC,IAAMC,W,gBC8CdC,E,uKA5CX,OACE,6BACE,yBAAKR,UAAWC,IAAOE,SACrB,wBAAIH,UAAWC,IAAOG,QAAtB,sBAEF,6BACE,yBAAKJ,UAAWC,IAAOQ,UACrB,wBAAIT,UAAWC,IAAOC,OAAtB,kBACA,wBAAIF,UAAWC,IAAOI,aAAtB,0DAEF,wBAAIL,UAAWC,IAAOS,MACpB,qLACA,uLAGJ,6BACE,wBAAIV,UAAWC,IAAOC,OAAtB,gBACA,wBAAIF,UAAWC,IAAOI,aAAtB,yDACA,wBAAIL,UAAWC,IAAOS,MACpB,oKACA,oLAGJ,6BACE,wBAAIV,UAAWC,IAAOC,OAAtB,gBACA,wBAAIF,UAAWC,IAAOI,aAAtB,yDACA,wBAAIL,UAAWC,IAAOS,MACpB,sGACA,mJAGJ,6BACE,wBAAIV,UAAWC,IAAOC,OAAtB,gBACA,wBAAIF,UAAWC,IAAOI,aAAtB,yDACA,wBAAIL,UAAWC,IAAOS,MACpB,4MACA,wJ,GAtCiBJ,IAAMC,W,MCiBpBI,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,kBAAC,IAAD,CAAOc,KAAK,cAAcC,UAAWN,MCJvBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BrC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,QAAU,0BAA0B,OAAS,yBAAyB,YAAc,iC","file":"static/js/main.88725b11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"ExperiencePage_headline___KONc\",\"wrapper\":\"ExperiencePage_wrapper__18_sT\",\"shadow\":\"ExperiencePage_shadow__2PdA0\",\"title\":\"ExperiencePage_title__33qt3\",\"description\":\"ExperiencePage_description__3UhN9\",\"info\":\"ExperiencePage_info__3ushe\"};","import React from 'react';\n\nimport styles from './HomePage.module.css';\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className={styles.title}> Hi, my name is </h1>\n        <div className={styles.wrapper}>\n          <h1 className={styles.shadow}> Autumn. </h1>\n        </div>\n        <h1 className={styles.description}> A girl who codes, creates, learns, journals, photographs, and dreams ... </h1>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\n\nimport styles from './ExperiencePage.module.css';\n\nclass ExperiencePage extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className={styles.wrapper}>\n          <h1 className={styles.shadow}> Work Experience </h1>\n        </div>\n        <div>\n          <div className={styles.headline}>\n            <h1 className={styles.title}> Public Comps </h1>\n            <h1 className={styles.description}> Full Stack Development Intern | June 2020 - Present </h1>\n          </div>\n          <ul className={styles.info}>\n            <li> Build fresh benchmarking and visualization features for a Software as a Service (SaaS)-focused web application using Ruby on Rails and React Redux. </li>\n            <li> Revamp UX and design aesthetic across a customer-facing Rails web application to improve user engagement and expose powerful, but underused, tools. </li>\n          </ul>\n        </div>\n        <div>\n          <h1 className={styles.title}> State Farm </h1>\n          <h1 className={styles.description}> Software Engineering Intern | June 2020 - July 2020 </h1>\n          <ul className={styles.info}>\n            <li> Migrated complex on-premise services to the cloud through a creative exploration and customization of AWS, Docker, and Kubernetes. </li>\n            <li> Built a Java tool that expedited the underwriting process by 50% through the consolidation of required documents and automation of alert emails. </li>\n          </ul>\n        </div>\n        <div>\n          <h1 className={styles.title}> State Farm </h1>\n          <h1 className={styles.description}> Software Engineering Intern | June 2019 - July 2019 </h1>\n          <ul className={styles.info}>\n            <li> Built impactful RESTful web services with the Java Spring Framework. </li>\n            <li> Designed 3 layers of application programming interfaces APIs to support the reformation of the mobile platform. </li>\n          </ul>\n        </div>\n        <div>\n          <h1 className={styles.title}> State Farm </h1>\n          <h1 className={styles.description}> Software Engineering Intern | June 2018 - July 2018 </h1>\n          <ul className={styles.info}>\n            <li> Developed application programming interfaces APIs and web services with Python and Django as part of transformation towards a modern data network within the organization. </li>\n            <li> Designed 3 layers of application programming interfaces APIs to support the reformation of the mobile platform. </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExperiencePage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\nimport HomePage from './features/homepage/HomePage';\nimport ExperiencePage from './features/experience/ExperiencePage';\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/experience\" component={ExperiencePage} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__GLvkt\",\"wrapper\":\"HomePage_wrapper__34Dtd\",\"shadow\":\"HomePage_shadow__19Yx3\",\"description\":\"HomePage_description__2sxhH\"};"],"sourceRoot":""}